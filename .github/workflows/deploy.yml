name: Deploy to EC2 (pull-based)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Send env file
        env:
          HOST: ${{ secrets.EC2_HOST }}
          PORT: ${{ secrets.EC2_PORT }}
          USER: ${{ secrets.EC2_USERNAME }}
          ENV_PRODUCTION: ${{ secrets.ENV_PRODUCTION }}
        run: |
          echo "$ENV_PRODUCTION" > .env.production
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $PORT $USER@$HOST "mkdir -p ~/runova"
          scp -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P $PORT .env.production $USER@$HOST:/home/$USER/runova/.env.production

      - name: Deploy via git pull
        env:
          HOST: ${{ secrets.EC2_HOST }}
          PORT: ${{ secrets.EC2_PORT }}
          USER: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $PORT $USER@$HOST << 'EOF'
            cd ~/runova

            echo "[+] Pull latest code"
            git reset --hard
            git pull origin main

            echo "[+] Build docker image"
            docker build -t runova-app .

            echo "[+] Stop old container"
            docker stop runova || true && docker rm runova || true

            echo "[+] Run new container"
            docker run -d --name runova --restart=always --env-file .env.production -p 3000:3000 runova-app
          EOF
